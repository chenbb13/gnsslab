function  plot_teqc(files, sats)
% PLOT_TEQC plots the TEQC report files which contains azi, ele, sn1, sn2,
% mp1, mp2, ion, iod data. TEQC is the Toolkit for GNSS data pre-processing
% More info see http://facility.unavco.org/software/teqc/teqc.html
%
% SYNTAX:
%   plot_teqc(files, sats);
%
% INPUT:
%   files  = the output file name generated by TEQC.
%   sats   = satellite PRN numbers for which the data to be plotted.
%            defaut set to "all" to plot all sat data
%
% OUTPUT:
%   none
%
% REFERENCE
%   TEQC: The Multi-Purpose Toolkit for GPS/GLONASS Data, L. H. Estey and C. M.
%   Meertens, GPS Solutions (pub. by John Wiley & Sons), Vol.3, No.1, pp. 42-49,
%   1999.
%
%   File format reference:
%   <http://ls.unavco.org/pipermail/teqc/2009/000827.html>
%   <http://ls.unavco.org/pipermail/teqc/2007/000566.html>
%   <http://postal.unavco.org/pipermail/teqc/2013/001594.html>
%
% See also READ_TEQC.

% validate the number of input arguments
narginchk(1,2);
if(nargin == 1), sats = 'all'; end;

if(ischar(files)), files = cellstr(files); end

n = length(files);
extf = cell(1,n);
mjdf = cell(1,n); satf = cell(1,n); datf = cell(1,n);

for i=1:length(files)
    % get the file extention
    [~, ~, extf{i}] = fileparts(files{i});
    [mjdf{i}, satf{i}, datf{i}] = read_teqc(files{i});
end

xmin =  min(cellfun(@min,mjdf));
xmax =  max(cellfun(@max,mjdf));
    
if strcmp('all', sats)
    sats = satf{1};
    sats = unique(sats);
end

figure
for i=1:length(sats)
    % figure(i);
    set(gcf, 'color', 'white');
    plot_teqc_data(sats{i}, extf, mjdf, satf, datf, xmin, xmax);
    pause
end

end

function plot_teqc_data(sat, extf, mjdf, satf, datf, xmin, xmax)
m = length(extf);

for i=1:m;
    ext = lower(extf{i});
    mjd = mjdf{i}; sat_list = satf{i}; data = datf{i};
    
    ii = (data == 0);
    data(ii) = nan;
        
    subplot(m, 1, i);
    

    ymin = floor(min(data(:)));
    ymax = ceil (max(data(:)));
    axis([xmin, xmax, ymin, ymax]);
    
    ii = strcmp(sat, sat_list);
    plot(mjd, data(:,ii),'.', 'MarkerSize', 5);
    % plot(t, data(:,ii),'.-k', 'LineWidth',1/2);
    % xmin = min(mjd);
    % xmax = max(mjd);
    
    set(gca,'xticklabel',mjd);
    set(gca,'xlim',[xmin, xmax]);
    dateaxis('X',13)
    
    if strcmp(ext,'.azi')
        ylabel('Azimuth (deg)')
        % axis([0 ceil(max(t)), -180 180]);
    elseif strcmp(ext,'.ele')
        ylabel('Elevation (deg)')
        %axis([0 ceil(max(t)), 0 90]);
        set(gca,'ylim',[0,90]);
    elseif strcmp(ext,'.ion')
        ylabel('Ion (m)')
    elseif strcmp(ext,'.iod')
        ylabel('Iod (m/s)')
    elseif strcmp(ext,'.mp1')
        ylabel('MP1 (m)')
        % axis([0, ceil(max(t)), -5, 5]);
    elseif strcmp(ext,'.mp2')
        ylabel('MP2 (m)')
        % axis([0 , ceil(max(t)), -5, 5]);
    elseif strcmp(ext,'.sn1')
        ylabel('SN1')
        %axis([0 , ceil(max(t)), 20, 60]);
    elseif strcmp(ext,'.sn2')
        ylabel('SN2')
        % axis([0 , ceil(max(t)), 20 60]);
    end
    
    grid on;
end

subplot(m, 1, 1);
title(sprintf('Satellite %s', sat));
subplot(m, 1, m);
date1 = min(mjd)+678942;
date2 = max(mjd)+678942;
xlabel([datestr(date1) '   |--------  Time  --------|    ' datestr(date2)]);

end




